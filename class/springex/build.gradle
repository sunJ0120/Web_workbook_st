plugins {
    id 'java'
    id 'war'
}

group 'org.zerock'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

//2.17.1 버전은 slf4j 1.x 전용으로 만들어진 것이기 때문에 2.x 버전으로 가져오게 되면 @Slf4j를 사용할 수 없게 되는 것이다.
configurations {
    all {
        // [ERROR 해결을 위해] SLF4J 2.x 대신 SLF4J 1.7.x를 사용하도록 강제
        resolutionStrategy.force 'org.slf4j:slf4j-api:1.7.36'
    }
}

dependencies {
    compileOnly('javax.servlet:javax.servlet-api:4.0.1')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    //스프링 관련 라이브러리들, 버전은 5.3.30으로 통일
    //maven repository -> spring core
    implementation 'org.springframework:spring-core:5.3.30'
    //maven repository -> spring context
    implementation 'org.springframework:spring-context:5.3.30'
    //maven repository -> spring test
    implementation 'org.springframework:spring-test:5.3.30'
    testImplementation 'org.springframework:spring-test:5.3.30'
    //spring web 사용을 위해 spring-webmvc 추가
    implementation 'org.springframework:spring-webmvc:5.3.30'
    implementation 'org.springframework:spring-jdbc:5.3.30'
    implementation 'org.springframework:spring-tx:5.3.30'

    //maven repository -> lombok
    //gradle에서 사용하기 위해 comfileonly로 변경
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // test에서 lombok 설정
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    //maven repository -> log4j
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-jcl:2.17.1'

    //maven repository -> jstl (jsp 사용을 위해)
    implementation 'javax.servlet:jstl:1.2'

    //DataSource 구성하기 : 이 부분에서 필요한 것은 mariadb & HikariCP이다.
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.3'
    implementation 'com.zaxxer:HikariCP:5.0.1'

    //mybatis 사용을 위한 gradle 구성
    implementation 'org.mybatis:mybatis:3.5.9'
    implementation 'org.mybatis:mybatis-spring:2.0.7'

    //DTO 검증을 위한 라이브러리
    implementation 'org.modelmapper:modelmapper:3.0.0'
    implementation 'org.hibernate.validator:hibernate-validator:6.2.1.Final'
}

test {
    useJUnitPlatform()
}